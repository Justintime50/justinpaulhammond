PHP_BIN := "bin"
STYLES_DIR := "node_modules/justintime50-styles/src"
PROJECT_NAME := "justinpaulhammond"
DOCKER_CONTAINER_NAME := `docker ps --filter "name=justinpaulhammond" --format "{{.ID}}" | head -n 1`
DOCKER_DB_CONTAINER_NAME := `docker ps --filter "name=justinpaulhammond-db" --format "{{.ID}}" | head -n 1`

# Compile for production
build:
    npx vite build

# Clean the project
clean:
    rm -rf ./{{PHP_BIN}} clover.html node_modules vendor *.cache .*.cache bootstrap/cache/*.php

# Clean the database
clean-db:
    docker exec -t {{DOCKER_CONTAINER_NAME}} php artisan db:wipe

# Run a coverage report
coverage:
    XDEBUG_MODE=coverage ./{{PHP_BIN}}/phpunit --coverage-html clover.html --coverage-clover clover.xml

# Install dependencies
install:
    composer install
    npm install

# Lint entire project
lint: lint-php lint-css phpstan

# Lint the PHP files
lint-php:
    ./{{PHP_BIN}}/phpcs --standard={{STYLES_DIR}}/php/phpcs.xml .

# Lint the SASS files
lint-css:
    npx stylelint resources/sass/*.scss --config {{STYLES_DIR}}/css/.stylelintrc.json --custom-syntax postcss-scss

# Fix all linting issues
lint-fix: lint-php-fix lint-css-fix

# Fix PHP linting
lint-php-fix:
    ./{{PHP_BIN}}/phpcbf --standard={{STYLES_DIR}}/php/phpcs.xml .

# Fix SASS linting
lint-css-fix:
    npx stylelint resources/sass/*.scss --config {{STYLES_DIR}}/css/.stylelintrc.json --custom-syntax postcss-scss --fix

# Migrates the database
migrate:
    docker exec -t {{DOCKER_DB_CONTAINER_NAME}} php artisan migrate --no-interaction --force

# Migrates the database and cleans in one go
migrate-fresh:
    docker exec -t {{DOCKER_DB_CONTAINER_NAME}} php artisan migrate:fresh --no-interaction --force

# Migrates and seeds the database
migrate-seed:
    docker exec -t {{DOCKER_DB_CONTAINER_NAME}} php artisan migrate:fresh --seed --no-interaction --force

# Run static analysis on the project
phpstan:
    ./{{PHP_BIN}}/phpstan analyse --memory-limit=4G

# Deploy the project for production
prod:
    docker stack deploy -c "$HOME"/git/{{PROJECT_NAME}}/docker-compose.yml {{PROJECT_NAME}}

# Compile SASS and Javascript during development (hot-reloads)
run:
    docker compose up -d
    npx vite

# Seeds the database
seed:
    docker exec -t {{DOCKER_DB_CONTAINER_NAME}} php artisan db:seed --no-interaction --force

# Sets up and spins up the project for the first time
setup:
    #!/usr/bin/env bash
    bash <(curl -s https://gist.githubusercontent.com/Justintime50/2de9303a491c22627ee502aaa7b1f289/raw) {{PROJECT_NAME}}

# Create a shell into the Docker container
shell:
    docker exec -it {{DOCKER_CONTAINER_NAME}} sh

# Create a shell into the DB Docker container
shell-db:
    docker exec -it {{DOCKER_DB_CONTAINER_NAME}} bash

# Tests the project
test:
    ./{{PHP_BIN}}/phpunit
